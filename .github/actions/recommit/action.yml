name: recommit
description: Run formatting commands and recommit results if necessary.
author: Totem Maintainers
inputs:
  commands:
    description: Shell commands to execute before attempting a commit.
    required: true
  token:
    description: Token used for pushing commits.
    required: true
  commit_message:
    description: Commit message to use when changes are produced.
    default: chore: automated formatting
    required: false
  head_ref:
    description: Target branch ref for pushes (pull request head or current ref).
    default: ""
    required: false
  head_repository:
    description: Repository that owns the head branch (used to detect forks).
    default: ""
    required: false
runs:
  using: composite
  steps:
    - name: Run commands
      shell: bash
      run: |
        set -euo pipefail
        ${INPUT_COMMANDS}
      env:
        INPUT_COMMANDS: ${{ inputs.commands }}

    - name: Commit changes if present
      shell: bash
      env:
        TOKEN: ${{ inputs.token }}
        COMMIT_MESSAGE: ${{ inputs.commit_message }}
        HEAD_REF: ${{ inputs.head_ref }}
        HEAD_REPOSITORY: ${{ inputs.head_repository }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        set -euo pipefail

        git add -A
        if git diff --cached --quiet; then
          echo "No formatting changes detected."
          exit 0
        fi

        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

        git commit -m "$COMMIT_MESSAGE"

        BRANCH_REF="$HEAD_REF"
        if [ -z "$BRANCH_REF" ]; then
          BRANCH_REF="${GITHUB_REF_NAME}"
        fi

        if [ -z "$BRANCH_REF" ]; then
          BRANCH_REF="$(git rev-parse --abbrev-ref HEAD)"
        fi

        if [ -z "$BRANCH_REF" ]; then
          echo "Unable to determine branch reference; skipping push."
          exit 0
        fi

        if [ -n "$HEAD_REPOSITORY" ] && [ "$HEAD_REPOSITORY" != "$GITHUB_REPOSITORY" ]; then
          echo "Head repository ($HEAD_REPOSITORY) differs from base ($GITHUB_REPOSITORY); skipping push."
          exit 0
        fi

        if [ -z "$TOKEN" ]; then
          echo "No token provided; skipping push."
          exit 0
        fi

        git remote set-url origin "https://x-access-token:${TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
        git push origin "HEAD:$BRANCH_REF" || echo "Failed to push formatting changes."
